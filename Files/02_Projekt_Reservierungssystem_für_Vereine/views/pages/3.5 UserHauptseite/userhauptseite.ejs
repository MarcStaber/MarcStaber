<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reservierung</title>
    
    <link rel="stylesheet" href="/css/pages/3.5 UserHauptseite/userhaupt.css"> />
    <link href='fullcalendar/main.css' rel='stylesheet' />
    <script src="https://kit.fontawesome.com/24eb8f8898.js" crossorigin="anonymous"></script>
</head>
<body>

<div class="row">
    <div class="column">
        <img src="/public/Logo.png" alt="Club Image" width="150" height="150">
    </div>

    <div class="columnText">
        <h1 name="club_significance ">
          <%= club[0].characteristic %>
        </h1>
        <p name="club_characteristic">
          <%= club[6].characteristic %>
        </p>
        <p name"">
            <%= account[0].first_name %>
            <%= account[0].last_name %>
          </p>
      </div>
      <ul class="nav" style="display: flex; align-items: center; justify-content: space-between; color: white;">
        <li class="nav-item"><a href="/login" class="nav-link link-body-emphasis px-2" style="color: white;">Login</a></li>
        <li class="nav-item"><a href="/register" class="nav-link link-body-emphasis px-2" style="color: white;">Register</a></li>
      </ul>
    <div class="column">
        <img src="/public/Logo.png" alt="Club Image" width="150" height="150">
    </div>
</div>

<div class="topnav">
    <a href="/accountdetails">Accountdetails</a>
    <a class="active" id="reservationBtn" href="/usermain"> Reservierung</a>
    <a href="/">Platzhalter</a>
</div>


<div class="addEventButton">
    <a href="#" id="addEventButton">Hier klicken um zu reservieren!</a>
</div>

<div id="calendar"></div>

<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script>
<script>

    function getCommonCalendarConfig(events = []) {
        return {
            initialView: 'timeGridWeek',
            firstDay: 1,
            fixedWeekCount: true,
            slotDuration: '00:30:00',
            slotLabelInterval: '01:00',
            slotMinTime: '07:00:00',
            slotMaxTime: '24:00:00',
            snapDuration: '00:15:00',
            slotLabelFormat: {
                hour: '2-digit',
                minute: '2-digit',
                hour12: false,
                omitZeroMinute: false,
            },
            allDaySlot: false,
            events: events,
            headerToolbar: {
                left: 'prev,next today, myCustomButton1,myCustomButton2',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay',
            },
            customButtons: {
                myCustomButton1: {
                    text: 'Platz 1',
                    click: function() {
                        console.log('Button 1 clicked');
                    }
                },
                myCustomButton2: {
                    text: 'Platz 2',
                    click: function() {
                        console.log('Button 2 clicked');
                    }
                },
            },
            locale: 'de',
            dayHeaderFormat: {
                weekday: 'long',
                month: 'numeric',
                day: 'numeric',
                year: 'numeric',
            },
            views: {
                dayGridMonth: {
                    dayHeaderFormat: { weekday: 'long' },
                },
            },
            buttonText: {
                today: 'Heute',
                week: 'Woche',
                day: 'Tag',
                month: 'Monat',
            },
        };
    }
       
    
    var calendar;
    
    document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
    
        var eventData = []; // Initialize with any existing events or empty
        var calendarConfig = getCommonCalendarConfig(eventData);
    
        // Initialize the calendar once and store the reference
        calendar = new FullCalendar.Calendar(calendarEl, calendarConfig);
        calendar.render();
    });
    
    // Function to add new events to the existing calendar
    function addNewEvent(eventData) {
        if (calendar) { // Ensure the calendar instance is defined
            calendar.addEvent(eventData); // Add the new event to the existing calendar
        } else {
            console.error("Calendar instance not found");
        }
    }
    
    document.getElementById('addEventButton').addEventListener('click', function(event) {
        event.preventDefault(); // Prevent default anchor behavior
        window.open('/event', 'AddEvent', 'width=400, height=600'); // Open a popup for adding events
    });
    
    
    </script>

</body>
</html>
